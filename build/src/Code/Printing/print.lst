GAS LISTING /tmp/ccCSOQHz.s 			page 1


   1              		.file	"print.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 756E7574 		.string	"unutrasnji prekid "
   9      7261736E 
   9      6A692070 
   9      72656B69 
   9      642000
  10 0013 00000000 		.align	3
  10      00
  11              	.LC1:
  12 0018 28696C65 		.string	"(ilegalna instrukcija)\n"
  12      67616C6E 
  12      6120696E 
  12      73747275 
  12      6B63696A 
  13              		.align	3
  14              	.LC2:
  15 0030 286E6564 		.string	"(nedozvoljena adresa citanja)\n"
  15      6F7A766F 
  15      6C6A656E 
  15      61206164 
  15      72657361 
  16 004f 00       		.align	3
  17              	.LC3:
  18 0050 286E6564 		.string	"(nedozvoljena adresa upisa)\n"
  18      6F7A766F 
  18      6C6A656E 
  18      61206164 
  18      72657361 
  19 006d 000000   		.align	3
  20              	.LC4:
  21 0070 73636175 		.string	"scause (opis prekida): "
  21      73652028 
  21      6F706973 
  21      20707265 
  21      6B696461 
  22              		.align	3
  23              	.LC5:
  24 0088 3B207365 		.string	"; sepc (adresa prekinute instrukcije): "
  24      70632028 
  24      61647265 
  24      73612070 
  24      72656B69 
  25              		.align	3
  26              	.LC6:
  27 00b0 3B207374 		.string	"; stval (dodatan opis izuzetka): "
  27      76616C20 
  27      28646F64 
  27      6174616E 
  27      206F7069 
  28 00d2 00000000 		.align	3
GAS LISTING /tmp/ccCSOQHz.s 			page 2


  28      0000
  29              	.LC7:
  30 00d8 0A0A00   		.string	"\n\n"
  31              		.text
  32              		.align	2
  33              		.globl	_Z17printErrorMessagemmm
  35              	_Z17printErrorMessagemmm:
  36              	.LFB22:
  37              		.file 1 "src/Code/Printing/print.cpp"
   1:src/Code/Printing/print.cpp **** #include "../../../h/Code/Printing/print.hpp"
   2:src/Code/Printing/print.cpp **** #include "../../../h/Code/InterruptHandling/Riscv.hpp"
   3:src/Code/Printing/print.cpp **** #include "../../../h/Testing/Testing_OS1/Printing.hpp"
   4:src/Code/Printing/print.cpp **** 
   5:src/Code/Printing/print.cpp **** void printErrorMessage(uint64 scause, uint64 stval, uint64 sepc) {
  38              		.loc 1 5 66
  39              		.cfi_startproc
  40              	.LVL0:
  41 0000 130101FC 		addi	sp,sp,-64
  42              		.cfi_def_cfa_offset 64
  43 0004 233C1102 		sd	ra,56(sp)
  44 0008 23388102 		sd	s0,48(sp)
  45 000c 23349102 		sd	s1,40(sp)
  46 0010 23302103 		sd	s2,32(sp)
  47 0014 233C3101 		sd	s3,24(sp)
  48 0018 23384101 		sd	s4,16(sp)
  49              		.cfi_offset 1, -8
  50              		.cfi_offset 8, -16
  51              		.cfi_offset 9, -24
  52              		.cfi_offset 18, -32
  53              		.cfi_offset 19, -40
  54              		.cfi_offset 20, -48
  55 001c 13040104 		addi	s0,sp,64
  56              		.cfi_def_cfa 8, 0
  57 0020 93040500 		mv	s1,a0
  58 0024 13890500 		mv	s2,a1
  59 0028 93090600 		mv	s3,a2
   6:src/Code/Printing/print.cpp ****     uint64 sstatus = Riscv::readSstatus();
  60              		.loc 1 6 5
  61              	.LBB8:
  62              	.LBB9:
  63              		.file 2 "src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp"
   1:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** #ifndef RISCV_HPP
   2:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** #define RISCV_HPP
   3:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
   4:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** #include "../../../lib/hw.h"
   5:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
   6:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** class Riscv {
   7:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** public:
   8:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // prekidna rutina (definisana u assembly fajlu supervisorTrap.S; ignorisati upozorenje CLiona 
   9:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void supervisorTrap();
  10:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  11:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // definisana u registersStack.S; ova metoda treba da sacuva registre a0-a7 na steku (preko ovi
  12:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void pushSysCallParameters();
  13:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  14:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // definisana u registersStack.S; ova metoda treba da sacuva registre x3..x31 na steku
  15:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void pushMostRegisters();
  16:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
GAS LISTING /tmp/ccCSOQHz.s 			page 3


  17:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // definisana u registersStack.S; ova metoda treba da restaurira registre x3..x31 sa steka
  18:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void popMostRegisters();
  19:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  20:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void exitSupervisorTrap();
  21:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  22:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // procitaj vrednost iz statusnog registra sstatus (ovaj registar pamti trenutno stanje proceso
  23:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static uint64 readSstatus();
  24:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  25:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // upisi vrednost u statusni registar sstatus
  26:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void writeSstatus(uint64 sstatus);
  27:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  28:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // pod spoljasnjim prekidima se podrazumevaju prekidi od tajmera i spoljasnji hardverski prekid
  29:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // u korisnickom rezimu bit SIE sstatus registra se ignorise - spoljasnji prekidi su tada podra
  30:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     enum BitMaskSstatus {
  31:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****         SSTATUS_SIE = (1 << 1), // ovaj bit govori da li su dozvoljeni spoljasnji prekidi (0 - nisu
  32:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5), // ovaj bit govori koja je bila prethodna vrednost bita SIE (pre s
  33:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****         SSTATUS_SPP = (1 << 8) // ovaj bit govori iz kog rezima se skocilo na prekidnu rutinu (0 - 
  34:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     };
  35:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  36:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // postavi odgovarajuce bite u registru sstatus na 1 (odgovarajuca maska se prosledjuje kao arg
  37:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void maskSetBitsSstatus(uint64 mask);
  38:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  39:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // postavi odgovarajuce bite u registru sstatus na 0 (odgovarajuca maska se prosledjuje kao arg
  40:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void maskClearBitsSstatus(uint64 mask);
  41:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  42:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // procitaj vrednost iz registra sip (ovaj registar pamti koji zahtevi za prekid su trenutno ak
  43:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static uint64 readSip();
  44:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  45:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // upisi vrednost u registar sip
  46:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void writeSip(uint64 sip);
  47:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  48:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     enum BitMaskSip {
  49:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****         SIP_SSIP = (1 << 1), // ovaj bit govori da li je aktivan zahtev za softverski prekid (0 - n
  50:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****         SIP_SEIP = (1 << 9) // ovaj bit govori da li je aktivan zahtev za spoljasnji hardverski pre
  51:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     };
  52:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  53:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // postavi odgovarajuce bite u registru sip na 1 (odgovarajuca maska se prosledjuje kao argumen
  54:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void maskSetBitsSip(uint64 mask);
  55:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  56:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // postavi odgovarajuce bite u registru sip na 0 (odgovarajuca maska se prosledjuje kao argumen
  57:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void maskClearBitsSip(uint64 mask);
  58:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  59:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // procitaj vrednost iz registra sie (ovaj registar pamti koji prekidi su trenutno dozvoljeni)
  60:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static uint64 readSie();
  61:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  62:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // upisi vrednost u registar sie
  63:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void writeSie(uint64 sie);
  64:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  65:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // vrednost registra sie se uzima u obzir prilikom izvrsavanja u korisnickom rezimu;
  66:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // ako se program izvrsava u sistemskom rezimu i bit SIE sstatus registra je nula, vrednost sie
  67:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     enum BitMaskSie {
  68:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****         SIE_SSIE = (1 << 1), // ovaj bit govori da li su dozvoljeni softverski prekidi (0 - nisu, 1
  69:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****         SIE_SEIE = (1 << 9) // ovaj bit govori da li su dozvoljeni spoljasnji hardverski prekidi (0
  70:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     };
  71:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  72:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // postavi odgovarajuce bite u registru sie na 1 (odgovarajuca maska se prosledjuje kao argumen
  73:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void maskSetBitsSie(uint64 mask);
GAS LISTING /tmp/ccCSOQHz.s 			page 4


  74:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  75:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // postavi odgovarajuce bite u registru sie na 0 (odgovarajuca maska se prosledjuje kao argumen
  76:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void maskClearBitsSie(uint64 mask);
  77:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  78:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // procitaj vrednost iz registra scratch (ovaj registar sluzi za cuvanje privremenih vrednosti)
  79:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static uint64 readScratch();
  80:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  81:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // upisi vrednost u registar scratch
  82:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void writeScratch(uint64 scratch);
  83:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  84:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // procitaj vrednost iz registra sepc (ovaj registar cuva vrednost registra pc iz korisnickog r
  85:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // to ce biti adresa instrukcije ecall ili adresa prve neizvrsene/prekinute instrukcije)
  86:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static uint64 readSepc();
  87:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  88:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // upisi vrednost u registar sepc
  89:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void writeSepc(uint64 sepc);
  90:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  91:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // procitaj vrednost iz registra scause (ovaj registar cuva razlog prelaska u sistemski rezim)
  92:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static uint64 readScause();
  93:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  94:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // upisi vrednost u registar scause
  95:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void writeScause(uint64 scause);
  96:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
  97:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // procitaj vrednost iz registra stvec (ovaj registar cuva adresu prekidne rutine)
  98:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static uint64 readStvec();
  99:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
 100:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // upisi vrednost u registar stvec
 101:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void writeStvec(uint64 stvec);
 102:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
 103:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // procitaj vrednost iz registra stval (ovaj registar cuva dodatan opis greske koja se dogodila
 104:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static uint64 readStval();
 105:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
 106:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // upisi vrednost u registar stval
 107:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void writeStval(uint64 stval);
 108:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
 109:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** private:
 110:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // obrada sistemskog poziva/prekida/izuzetka
 111:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     static void handleSupervisorTrap();
 112:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** };
 113:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
 114:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** // ove metode pisem kao inline da ne bi bilo rezijskih troskova koje iziskuje poziv funkcije (preno
 115:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** // funkcije, cuvanje povratne adrese)- ovako ce kod tela funkcije samo da se ugradi na mesto poziva
 116:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** // poziva funkcije
 117:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** inline uint64 Riscv::readSstatus() {
 118:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // volatile kvalifikator obezbedjuje da prevodilac ne izvrsi optimizaciju i sacuva lokalnu prom
 119:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     // registara - umesto toga, sacuvace je na steku
 120:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     uint64 volatile sstatus;
  64              		.loc 2 120 5
 121:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
  65              		.loc 2 121 5
  66              		.loc 2 121 76 is_stmt 0
  67              	#APP
  68              	# 121 "src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp" 1
 122              	    return sstatus;
  69              		csrr a5, sstatus
  70              	# 0 "" 2
  71              	#NO_APP
GAS LISTING /tmp/ccCSOQHz.s 			page 5


  72 0030 2334F4FC 		sd	a5,-56(s0)
  73              		.loc 2 122 5 is_stmt 1
  74              		.loc 2 122 12 is_stmt 0
  75 0034 033A84FC 		ld	s4,-56(s0)
  76              	.LVL1:
  77              	.LBE9:
  78              	.LBE8:
   7:src/Code/Printing/print.cpp ****     Riscv::maskClearBitsSstatus(Riscv::SSTATUS_SIE); // zabrana spoljasnjih prekida (softverskih pr
  79              		.loc 1 7 5 is_stmt 1
  80              	.LBB10:
  81              	.LBB11:
 123:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** }
 124:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
 125:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** inline void Riscv::writeSstatus(uint64 sstatus) {
 126:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 127:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** }
 128:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
 129:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** inline void Riscv::maskSetBitsSstatus(uint64 mask) {
 130:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 131:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** }
 132:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** 
 133:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** inline void Riscv::maskClearBitsSstatus(uint64 mask) {
 134:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  82              		.loc 2 134 5
  83              		.loc 2 134 68 is_stmt 0
  84 0038 93072000 		li	a5,2
  85              	#APP
  86              	# 134 "src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp" 1
 135              	}
  87              		csrc sstatus, a5
  88              	# 0 "" 2
  89              	.LVL2:
  90              	#NO_APP
  91              	.LBE11:
  92              	.LBE10:
   8:src/Code/Printing/print.cpp ****     printString("unutrasnji prekid ");
  93              		.loc 1 8 5 is_stmt 1
  94              		.loc 1 8 16 is_stmt 0
  95 0040 17050000 		lla	a0,.LC0
  95      13050500 
  96              	.LVL3:
  97 0048 97000000 		call	_Z11printStringPKc@plt
  97      E7800000 
  98              	.LVL4:
   9:src/Code/Printing/print.cpp ****     switch (scause) {
  99              		.loc 1 9 5 is_stmt 1
 100 0050 93075000 		li	a5,5
 101 0054 6384F40C 		beq	s1,a5,.L2
 102 0058 93077000 		li	a5,7
 103 005c 638AF40C 		beq	s1,a5,.L3
 104 0060 93072000 		li	a5,2
 105 0064 6382F40A 		beq	s1,a5,.L6
 106              	.L4:
  10:src/Code/Printing/print.cpp ****         case 0x0000000000000002UL:
  11:src/Code/Printing/print.cpp ****             printString("(ilegalna instrukcija)\n");
  12:src/Code/Printing/print.cpp ****             break;
  13:src/Code/Printing/print.cpp ****         case 0x0000000000000005UL:
GAS LISTING /tmp/ccCSOQHz.s 			page 6


  14:src/Code/Printing/print.cpp ****             printString("(nedozvoljena adresa citanja)\n");
  15:src/Code/Printing/print.cpp ****             break;
  16:src/Code/Printing/print.cpp ****         case 0x0000000000000007UL:
  17:src/Code/Printing/print.cpp ****             printString("(nedozvoljena adresa upisa)\n");
  18:src/Code/Printing/print.cpp ****             break;
  19:src/Code/Printing/print.cpp ****     }
  20:src/Code/Printing/print.cpp ****     printString("scause (opis prekida): "); printInt(scause);
 107              		.loc 1 20 5
 108              		.loc 1 20 16 is_stmt 0
 109 0068 17050000 		lla	a0,.LC4
 109      13050500 
 110 0070 97000000 		call	_Z11printStringPKc@plt
 110      E7800000 
 111              	.LVL5:
 112              		.loc 1 20 45 is_stmt 1
 113              		.loc 1 20 53 is_stmt 0
 114 0078 13060000 		li	a2,0
 115 007c 9305A000 		li	a1,10
 116 0080 1B850400 		sext.w	a0,s1
 117 0084 97000000 		call	_Z8printIntiii@plt
 117      E7800000 
 118              	.LVL6:
  21:src/Code/Printing/print.cpp ****     printString("; sepc (adresa prekinute instrukcije): "); printInt(sepc);
 119              		.loc 1 21 5 is_stmt 1
 120              		.loc 1 21 16 is_stmt 0
 121 008c 17050000 		lla	a0,.LC5
 121      13050500 
 122 0094 97000000 		call	_Z11printStringPKc@plt
 122      E7800000 
 123              	.LVL7:
 124              		.loc 1 21 61 is_stmt 1
 125              		.loc 1 21 69 is_stmt 0
 126 009c 13060000 		li	a2,0
 127 00a0 9305A000 		li	a1,10
 128 00a4 1B850900 		sext.w	a0,s3
 129 00a8 97000000 		call	_Z8printIntiii@plt
 129      E7800000 
 130              	.LVL8:
  22:src/Code/Printing/print.cpp ****     printString("; stval (dodatan opis izuzetka): "); printInt(stval);
 131              		.loc 1 22 5 is_stmt 1
 132              		.loc 1 22 16 is_stmt 0
 133 00b0 17050000 		lla	a0,.LC6
 133      13050500 
 134 00b8 97000000 		call	_Z11printStringPKc@plt
 134      E7800000 
 135              	.LVL9:
 136              		.loc 1 22 55 is_stmt 1
 137              		.loc 1 22 63 is_stmt 0
 138 00c0 13060000 		li	a2,0
 139 00c4 9305A000 		li	a1,10
 140 00c8 1B050900 		sext.w	a0,s2
 141 00cc 97000000 		call	_Z8printIntiii@plt
 141      E7800000 
 142              	.LVL10:
  23:src/Code/Printing/print.cpp ****     printString("\n\n");
 143              		.loc 1 23 5 is_stmt 1
 144              		.loc 1 23 16 is_stmt 0
GAS LISTING /tmp/ccCSOQHz.s 			page 7


 145 00d4 17050000 		lla	a0,.LC7
 145      13050500 
 146 00dc 97000000 		call	_Z11printStringPKc@plt
 146      E7800000 
 147              	.LVL11:
  24:src/Code/Printing/print.cpp ****     Riscv::writeSstatus(sstatus); // restauracija inicijalnog sstatus registra
 148              		.loc 1 24 5 is_stmt 1
 149              	.LBB12:
 150              	.LBB13:
 126:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** }
 151              		.loc 2 126 5
 126:src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp **** }
 152              		.loc 2 126 77 is_stmt 0
 153              	#APP
 154              	# 126 "src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp" 1
 155              		csrw sstatus, s4
 156              	# 0 "" 2
 157              	.LVL12:
 158              	#NO_APP
 159              	.LBE13:
 160              	.LBE12:
  25:src/Code/Printing/print.cpp **** }...
 161              		.loc 1 25 1
 162 00e8 83308103 		ld	ra,56(sp)
 163              		.cfi_remember_state
 164              		.cfi_restore 1
 165 00ec 03340103 		ld	s0,48(sp)
 166              		.cfi_restore 8
 167              		.cfi_def_cfa 2, 64
 168 00f0 83348102 		ld	s1,40(sp)
 169              		.cfi_restore 9
 170              	.LVL13:
 171 00f4 03390102 		ld	s2,32(sp)
 172              		.cfi_restore 18
 173              	.LVL14:
 174 00f8 83398101 		ld	s3,24(sp)
 175              		.cfi_restore 19
 176              	.LVL15:
 177 00fc 033A0101 		ld	s4,16(sp)
 178              		.cfi_restore 20
 179              	.LVL16:
 180 0100 13010104 		addi	sp,sp,64
 181              		.cfi_def_cfa_offset 0
 182 0104 67800000 		jr	ra
 183              	.LVL17:
 184              	.L6:
 185              		.cfi_restore_state
  10:src/Code/Printing/print.cpp ****         case 0x0000000000000002UL:
 186              		.loc 1 10 9 is_stmt 1
  11:src/Code/Printing/print.cpp ****             printString("(ilegalna instrukcija)\n");
 187              		.loc 1 11 13
  11:src/Code/Printing/print.cpp ****             printString("(ilegalna instrukcija)\n");
 188              		.loc 1 11 24 is_stmt 0
 189 0108 17050000 		lla	a0,.LC1
 189      13050500 
 190 0110 97000000 		call	_Z11printStringPKc@plt
 190      E7800000 
GAS LISTING /tmp/ccCSOQHz.s 			page 8


 191              	.LVL18:
  12:src/Code/Printing/print.cpp ****             break;
 192              		.loc 1 12 13 is_stmt 1
 193 0118 6FF01FF5 		j	.L4
 194              	.L2:
  13:src/Code/Printing/print.cpp ****         case 0x0000000000000005UL:
 195              		.loc 1 13 9
  14:src/Code/Printing/print.cpp ****             printString("(nedozvoljena adresa citanja)\n");
 196              		.loc 1 14 13
  14:src/Code/Printing/print.cpp ****             printString("(nedozvoljena adresa citanja)\n");
 197              		.loc 1 14 24 is_stmt 0
 198 011c 17050000 		lla	a0,.LC2
 198      13050500 
 199 0124 97000000 		call	_Z11printStringPKc@plt
 199      E7800000 
 200              	.LVL19:
  15:src/Code/Printing/print.cpp ****             break;
 201              		.loc 1 15 13 is_stmt 1
 202 012c 6FF0DFF3 		j	.L4
 203              	.L3:
  16:src/Code/Printing/print.cpp ****         case 0x0000000000000007UL:
 204              		.loc 1 16 9
  17:src/Code/Printing/print.cpp ****             printString("(nedozvoljena adresa upisa)\n");
 205              		.loc 1 17 13
  17:src/Code/Printing/print.cpp ****             printString("(nedozvoljena adresa upisa)\n");
 206              		.loc 1 17 24 is_stmt 0
 207 0130 17050000 		lla	a0,.LC3
 207      13050500 
 208 0138 97000000 		call	_Z11printStringPKc@plt
 208      E7800000 
 209              	.LVL20:
  18:src/Code/Printing/print.cpp ****             break;
 210              		.loc 1 18 13 is_stmt 1
 211 0140 6FF09FF2 		j	.L4
 212              		.cfi_endproc
 213              	.LFE22:
 215              	.Letext0:
 216              		.file 3 "src/Code/Printing/../../../h/Code/Printing/../../../lib/hw.h"
 217              		.file 4 "src/Code/Printing/../../../h/Testing/Testing_OS1/Printing.hpp"
 218              		.file 5 "src/Code/Printing/../../../h/Testing/Testing_OS1/../../Code/SystemCalls/syscall_c.h"
GAS LISTING /tmp/ccCSOQHz.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 print.cpp
     /tmp/ccCSOQHz.s:35     .text:0000000000000000 _Z17printErrorMessagemmm
     /tmp/ccCSOQHz.s:39     .text:0000000000000000 .L0 
     /tmp/ccCSOQHz.s:41     .text:0000000000000000 .L0 
     /tmp/ccCSOQHz.s:42     .text:0000000000000004 .L0 
     /tmp/ccCSOQHz.s:49     .text:000000000000001c .L0 
     /tmp/ccCSOQHz.s:50     .text:000000000000001c .L0 
     /tmp/ccCSOQHz.s:51     .text:000000000000001c .L0 
     /tmp/ccCSOQHz.s:52     .text:000000000000001c .L0 
     /tmp/ccCSOQHz.s:53     .text:000000000000001c .L0 
     /tmp/ccCSOQHz.s:54     .text:000000000000001c .L0 
     /tmp/ccCSOQHz.s:56     .text:0000000000000020 .L0 
     /tmp/ccCSOQHz.s:64     .text:000000000000002c .L0 
     /tmp/ccCSOQHz.s:65     .text:000000000000002c .L0 
     /tmp/ccCSOQHz.s:66     .text:000000000000002c .L0 
src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp:121    .text:000000000000002c .L0 
     /tmp/ccCSOQHz.s:74     .text:0000000000000034 .L0 
     /tmp/ccCSOQHz.s:75     .text:0000000000000034 .L0 
     /tmp/ccCSOQHz.s:82     .text:0000000000000038 .L0 
     /tmp/ccCSOQHz.s:83     .text:0000000000000038 .L0 
     /tmp/ccCSOQHz.s:84     .text:0000000000000038 .L0 
     /tmp/ccCSOQHz.s:94     .text:0000000000000040 .L0 
     /tmp/ccCSOQHz.s:95     .text:0000000000000040 .L0 
     /tmp/ccCSOQHz.s:100    .text:0000000000000050 .L0 
     /tmp/ccCSOQHz.s:108    .text:0000000000000068 .L0 
     /tmp/ccCSOQHz.s:109    .text:0000000000000068 .L0 
     /tmp/ccCSOQHz.s:113    .text:0000000000000078 .L0 
     /tmp/ccCSOQHz.s:114    .text:0000000000000078 .L0 
     /tmp/ccCSOQHz.s:120    .text:000000000000008c .L0 
     /tmp/ccCSOQHz.s:121    .text:000000000000008c .L0 
     /tmp/ccCSOQHz.s:125    .text:000000000000009c .L0 
     /tmp/ccCSOQHz.s:126    .text:000000000000009c .L0 
     /tmp/ccCSOQHz.s:132    .text:00000000000000b0 .L0 
     /tmp/ccCSOQHz.s:133    .text:00000000000000b0 .L0 
     /tmp/ccCSOQHz.s:137    .text:00000000000000c0 .L0 
     /tmp/ccCSOQHz.s:138    .text:00000000000000c0 .L0 
     /tmp/ccCSOQHz.s:144    .text:00000000000000d4 .L0 
     /tmp/ccCSOQHz.s:145    .text:00000000000000d4 .L0 
     /tmp/ccCSOQHz.s:151    .text:00000000000000e4 .L0 
     /tmp/ccCSOQHz.s:152    .text:00000000000000e4 .L0 
src/Code/Printing/../../../h/Code/InterruptHandling/Riscv.hpp:126    .text:00000000000000e4 .L0 
     /tmp/ccCSOQHz.s:162    .text:00000000000000e8 .L0 
     /tmp/ccCSOQHz.s:163    .text:00000000000000ec .L0 
     /tmp/ccCSOQHz.s:164    .text:00000000000000ec .L0 
     /tmp/ccCSOQHz.s:166    .text:00000000000000f0 .L0 
     /tmp/ccCSOQHz.s:167    .text:00000000000000f0 .L0 
     /tmp/ccCSOQHz.s:169    .text:00000000000000f4 .L0 
     /tmp/ccCSOQHz.s:172    .text:00000000000000f8 .L0 
     /tmp/ccCSOQHz.s:175    .text:00000000000000fc .L0 
     /tmp/ccCSOQHz.s:178    .text:0000000000000100 .L0 
     /tmp/ccCSOQHz.s:181    .text:0000000000000104 .L0 
     /tmp/ccCSOQHz.s:185    .text:0000000000000108 .L0 
     /tmp/ccCSOQHz.s:187    .text:0000000000000108 .L0 
     /tmp/ccCSOQHz.s:188    .text:0000000000000108 .L0 
     /tmp/ccCSOQHz.s:189    .text:0000000000000108 .L0 
     /tmp/ccCSOQHz.s:193    .text:0000000000000118 .L0 
GAS LISTING /tmp/ccCSOQHz.s 			page 10


     /tmp/ccCSOQHz.s:196    .text:000000000000011c .L0 
     /tmp/ccCSOQHz.s:197    .text:000000000000011c .L0 
     /tmp/ccCSOQHz.s:198    .text:000000000000011c .L0 
     /tmp/ccCSOQHz.s:202    .text:000000000000012c .L0 
     /tmp/ccCSOQHz.s:205    .text:0000000000000130 .L0 
     /tmp/ccCSOQHz.s:206    .text:0000000000000130 .L0 
     /tmp/ccCSOQHz.s:207    .text:0000000000000130 .L0 
     /tmp/ccCSOQHz.s:211    .text:0000000000000140 .L0 
     /tmp/ccCSOQHz.s:212    .text:0000000000000144 .L0 
     /tmp/ccCSOQHz.s:219    .text:0000000000000144 .L0 
     /tmp/ccCSOQHz.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccCSOQHz.s:95     .text:0000000000000040 .L0 
     /tmp/ccCSOQHz.s:20     .rodata.str1.8:0000000000000070 .LC4
     /tmp/ccCSOQHz.s:109    .text:0000000000000068 .L0 
     /tmp/ccCSOQHz.s:23     .rodata.str1.8:0000000000000088 .LC5
     /tmp/ccCSOQHz.s:121    .text:000000000000008c .L0 
     /tmp/ccCSOQHz.s:26     .rodata.str1.8:00000000000000b0 .LC6
     /tmp/ccCSOQHz.s:133    .text:00000000000000b0 .L0 
     /tmp/ccCSOQHz.s:29     .rodata.str1.8:00000000000000d8 .LC7
     /tmp/ccCSOQHz.s:145    .text:00000000000000d4 .L0 
     /tmp/ccCSOQHz.s:11     .rodata.str1.8:0000000000000018 .LC1
     /tmp/ccCSOQHz.s:189    .text:0000000000000108 .L0 
     /tmp/ccCSOQHz.s:14     .rodata.str1.8:0000000000000030 .LC2
     /tmp/ccCSOQHz.s:198    .text:000000000000011c .L0 
     /tmp/ccCSOQHz.s:17     .rodata.str1.8:0000000000000050 .LC3
     /tmp/ccCSOQHz.s:207    .text:0000000000000130 .L0 
     /tmp/ccCSOQHz.s:194    .text:000000000000011c .L2
     /tmp/ccCSOQHz.s:203    .text:0000000000000130 .L3
     /tmp/ccCSOQHz.s:184    .text:0000000000000108 .L6
     /tmp/ccCSOQHz.s:106    .text:0000000000000068 .L4
     /tmp/ccCSOQHz.s:924    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccCSOQHz.s:1689   .debug_str:00000000000005b3 .LASF83
     /tmp/ccCSOQHz.s:1533   .debug_str:0000000000000013 .LASF84
     /tmp/ccCSOQHz.s:1569   .debug_str:000000000000014a .LASF85
     /tmp/ccCSOQHz.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccCSOQHz.s:215    .text:0000000000000144 .Letext0
     /tmp/ccCSOQHz.s:1529   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccCSOQHz.s:1625   .debug_str:000000000000038c .LASF0
     /tmp/ccCSOQHz.s:1635   .debug_str:00000000000003cc .LASF1
     /tmp/ccCSOQHz.s:1621   .debug_str:000000000000036b .LASF2
     /tmp/ccCSOQHz.s:1599   .debug_str:00000000000002a4 .LASF4
     /tmp/ccCSOQHz.s:1669   .debug_str:0000000000000511 .LASF3
     /tmp/ccCSOQHz.s:1549   .debug_str:00000000000000a4 .LASF5
     /tmp/ccCSOQHz.s:1639   .debug_str:00000000000003ee .LASF6
     /tmp/ccCSOQHz.s:1623   .debug_str:0000000000000379 .LASF7
     /tmp/ccCSOQHz.s:1697   .debug_str:00000000000006ac .LASF8
     /tmp/ccCSOQHz.s:1589   .debug_str:000000000000022f .LASF9
     /tmp/ccCSOQHz.s:1645   .debug_str:000000000000043d .LASF10
     /tmp/ccCSOQHz.s:1693   .debug_str:0000000000000689 .LASF11
     /tmp/ccCSOQHz.s:1553   .debug_str:00000000000000b7 .LASF12
     /tmp/ccCSOQHz.s:1537   .debug_str:0000000000000041 .LASF13
     /tmp/ccCSOQHz.s:1561   .debug_str:00000000000000fe .LASF14
     /tmp/ccCSOQHz.s:1663   .debug_str:00000000000004e6 .LASF15
     /tmp/ccCSOQHz.s:1571   .debug_str:000000000000016d .LASF16
     /tmp/ccCSOQHz.s:1633   .debug_str:00000000000003c6 .LASF86
     /tmp/ccCSOQHz.s:1573   .debug_str:0000000000000183 .LASF87
     /tmp/ccCSOQHz.s:1567   .debug_str:000000000000013e .LASF17
GAS LISTING /tmp/ccCSOQHz.s 			page 11


     /tmp/ccCSOQHz.s:1609   .debug_str:0000000000000301 .LASF18
     /tmp/ccCSOQHz.s:1551   .debug_str:00000000000000ab .LASF19
     /tmp/ccCSOQHz.s:1671   .debug_str:0000000000000523 .LASF20
     /tmp/ccCSOQHz.s:1557   .debug_str:00000000000000ce .LASF22
     /tmp/ccCSOQHz.s:1563   .debug_str:000000000000010a .LASF21
     /tmp/ccCSOQHz.s:1583   .debug_str:00000000000001fd .LASF23
     /tmp/ccCSOQHz.s:1535   .debug_str:000000000000002f .LASF24
     /tmp/ccCSOQHz.s:1597   .debug_str:0000000000000285 .LASF25
     /tmp/ccCSOQHz.s:1705   .debug_str:00000000000006e6 .LASF26
     /tmp/ccCSOQHz.s:1539   .debug_str:0000000000000051 .LASF27
     /tmp/ccCSOQHz.s:1603   .debug_str:00000000000002b7 .LASF28
     /tmp/ccCSOQHz.s:1577   .debug_str:00000000000001a5 .LASF29
     /tmp/ccCSOQHz.s:1601   .debug_str:00000000000002ab .LASF36
     /tmp/ccCSOQHz.s:1591   .debug_str:000000000000023d .LASF38
     /tmp/ccCSOQHz.s:1661   .debug_str:00000000000004d9 .LASF30
     /tmp/ccCSOQHz.s:1647   .debug_str:000000000000044c .LASF32
     /tmp/ccCSOQHz.s:1531   .debug_str:0000000000000000 .LASF31
     /tmp/ccCSOQHz.s:1643   .debug_str:000000000000041d .LASF33
     /tmp/ccCSOQHz.s:1657   .debug_str:00000000000004ac .LASF34
     /tmp/ccCSOQHz.s:1579   .debug_str:00000000000001c5 .LASF35
     /tmp/ccCSOQHz.s:1711   .debug_str:0000000000000711 .LASF37
     /tmp/ccCSOQHz.s:1695   .debug_str:0000000000000698 .LASF39
     /tmp/ccCSOQHz.s:1707   .debug_str:00000000000006f7 .LASF40
     /tmp/ccCSOQHz.s:1605   .debug_str:00000000000002ca .LASF41
     /tmp/ccCSOQHz.s:1627   .debug_str:0000000000000399 .LASF42
     /tmp/ccCSOQHz.s:1619   .debug_str:000000000000034f .LASF43
     /tmp/ccCSOQHz.s:1713   .debug_str:0000000000000719 .LASF44
     /tmp/ccCSOQHz.s:1565   .debug_str:0000000000000120 .LASF45
     /tmp/ccCSOQHz.s:1541   .debug_str:000000000000006f .LASF46
     /tmp/ccCSOQHz.s:1559   .debug_str:00000000000000ea .LASF47
     /tmp/ccCSOQHz.s:1699   .debug_str:00000000000006bc .LASF48
     /tmp/ccCSOQHz.s:1683   .debug_str:000000000000058e .LASF49
     /tmp/ccCSOQHz.s:1617   .debug_str:0000000000000340 .LASF50
     /tmp/ccCSOQHz.s:1641   .debug_str:0000000000000401 .LASF51
     /tmp/ccCSOQHz.s:1709   .debug_str:0000000000000700 .LASF52
     /tmp/ccCSOQHz.s:1613   .debug_str:000000000000031a .LASF53
     /tmp/ccCSOQHz.s:1611   .debug_str:000000000000030e .LASF54
     /tmp/ccCSOQHz.s:1595   .debug_str:000000000000026c .LASF55
     /tmp/ccCSOQHz.s:1675   .debug_str:000000000000053c .LASF56
     /tmp/ccCSOQHz.s:1651   .debug_str:0000000000000472 .LASF57
     /tmp/ccCSOQHz.s:1543   .debug_str:0000000000000077 .LASF58
     /tmp/ccCSOQHz.s:1677   .debug_str:0000000000000549 .LASF59
     /tmp/ccCSOQHz.s:1673   .debug_str:0000000000000532 .LASF60
     /tmp/ccCSOQHz.s:1655   .debug_str:0000000000000496 .LASF61
     /tmp/ccCSOQHz.s:1545   .debug_str:0000000000000080 .LASF62
     /tmp/ccCSOQHz.s:1681   .debug_str:0000000000000576 .LASF63
     /tmp/ccCSOQHz.s:1703   .debug_str:00000000000006da .LASF64
     /tmp/ccCSOQHz.s:1547   .debug_str:000000000000008b .LASF65
     /tmp/ccCSOQHz.s:1665   .debug_str:00000000000004fc .LASF66
     /tmp/ccCSOQHz.s:1593   .debug_str:0000000000000256 .LASF67
     /tmp/ccCSOQHz.s:1687   .debug_str:00000000000005a8 .LASF68
     /tmp/ccCSOQHz.s:1679   .debug_str:000000000000055e .LASF69
     /tmp/ccCSOQHz.s:1653   .debug_str:000000000000048c .LASF70
     /tmp/ccCSOQHz.s:1581   .debug_str:00000000000001e7 .LASF71
     /tmp/ccCSOQHz.s:1667   .debug_str:0000000000000506 .LASF72
     /tmp/ccCSOQHz.s:1659   .debug_str:00000000000004c1 .LASF73
     /tmp/ccCSOQHz.s:1701   .debug_str:00000000000006c5 .LASF88
GAS LISTING /tmp/ccCSOQHz.s 			page 12


     /tmp/ccCSOQHz.s:1607   .debug_str:00000000000002df .LASF89
     /tmp/ccCSOQHz.s:1691   .debug_str:0000000000000677 .LASF90
     /tmp/ccCSOQHz.s:1629   .debug_str:00000000000003a8 .LASF91
     /tmp/ccCSOQHz.s:36     .text:0000000000000000 .LFB22
     /tmp/ccCSOQHz.s:213    .text:0000000000000144 .LFE22
     /tmp/ccCSOQHz.s:1555   .debug_str:00000000000000c7 .LASF74
     /tmp/ccCSOQHz.s:1424   .debug_loc:0000000000000000 .LLST0
     /tmp/ccCSOQHz.s:1587   .debug_str:0000000000000229 .LASF75
     /tmp/ccCSOQHz.s:1446   .debug_loc:000000000000005f .LLST1
     /tmp/ccCSOQHz.s:1631   .debug_str:00000000000003c1 .LASF76
     /tmp/ccCSOQHz.s:1468   .debug_loc:00000000000000be .LLST2
     /tmp/ccCSOQHz.s:1615   .debug_str:0000000000000338 .LASF77
     /tmp/ccCSOQHz.s:1490   .debug_loc:000000000000011d .LLST3
     /tmp/ccCSOQHz.s:61     .text:000000000000002c .LBB8
     /tmp/ccCSOQHz.s:78     .text:0000000000000038 .LBE8
     /tmp/ccCSOQHz.s:80     .text:0000000000000038 .LBB10
     /tmp/ccCSOQHz.s:92     .text:0000000000000040 .LBE10
     /tmp/ccCSOQHz.s:1501   .debug_loc:0000000000000153 .LLST4
     /tmp/ccCSOQHz.s:149    .text:00000000000000e4 .LBB12
     /tmp/ccCSOQHz.s:160    .text:00000000000000e8 .LBE12
     /tmp/ccCSOQHz.s:1509   .debug_loc:0000000000000177 .LLST5
     /tmp/ccCSOQHz.s:98     .text:0000000000000050 .LVL4
     /tmp/ccCSOQHz.s:111    .text:0000000000000078 .LVL5
     /tmp/ccCSOQHz.s:118    .text:000000000000008c .LVL6
     /tmp/ccCSOQHz.s:123    .text:000000000000009c .LVL7
     /tmp/ccCSOQHz.s:130    .text:00000000000000b0 .LVL8
     /tmp/ccCSOQHz.s:135    .text:00000000000000c0 .LVL9
     /tmp/ccCSOQHz.s:142    .text:00000000000000d4 .LVL10
     /tmp/ccCSOQHz.s:147    .text:00000000000000e4 .LVL11
     /tmp/ccCSOQHz.s:191    .text:0000000000000118 .LVL18
     /tmp/ccCSOQHz.s:200    .text:000000000000012c .LVL19
     /tmp/ccCSOQHz.s:209    .text:0000000000000140 .LVL20
     /tmp/ccCSOQHz.s:1685   .debug_str:00000000000005a3 .LASF78
     /tmp/ccCSOQHz.s:1575   .debug_str:0000000000000192 .LASF79
     /tmp/ccCSOQHz.s:1649   .debug_str:0000000000000466 .LASF81
     /tmp/ccCSOQHz.s:1637   .debug_str:00000000000003df .LASF80
     /tmp/ccCSOQHz.s:1585   .debug_str:0000000000000220 .LASF82
     /tmp/ccCSOQHz.s:40     .text:0000000000000000 .LVL0
     /tmp/ccCSOQHz.s:96     .text:0000000000000048 .LVL3
     /tmp/ccCSOQHz.s:170    .text:00000000000000f4 .LVL13
     /tmp/ccCSOQHz.s:183    .text:0000000000000108 .LVL17
     /tmp/ccCSOQHz.s:173    .text:00000000000000f8 .LVL14
     /tmp/ccCSOQHz.s:176    .text:00000000000000fc .LVL15
     /tmp/ccCSOQHz.s:76     .text:0000000000000038 .LVL1
     /tmp/ccCSOQHz.s:179    .text:0000000000000100 .LVL16
     /tmp/ccCSOQHz.s:89     .text:0000000000000040 .LVL2
     /tmp/ccCSOQHz.s:157    .text:00000000000000e8 .LVL12
     /tmp/ccCSOQHz.s:220    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z11printStringPKc
_Z8printIntiii
